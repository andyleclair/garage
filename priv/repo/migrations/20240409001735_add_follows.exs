defmodule Garage.Repo.Migrations.AddFollows do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:variators) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:users) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:tokens) do
      modify :created_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
    end

    alter table(:pulleys) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:models) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:manufacturers) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:likes) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:ignitions) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    create table(:follows, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "follows_user_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :build_id, :uuid, null: false
    end

    alter table(:exhausts) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:engines) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:cylinders) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:cranks) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:comments) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:clutches) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:carburetors) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :sizes, {:array, :text}
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:builds) do
      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :needle

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :slide

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :jetting

      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:follows) do
      modify :build_id,
             references(:builds,
               column: :id,
               name: "follows_build_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    create unique_index(:follows, [:user_id, :build_id],
             name: "follows_unique_user_and_build_index"
           )
  end

  def down do
    drop_if_exists unique_index(:follows, [:user_id, :build_id],
                     name: "follows_unique_user_and_build_index"
                   )

    drop constraint(:follows, "follows_build_id_fkey")

    alter table(:follows) do
      modify :build_id, :uuid
    end

    alter table(:builds) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
      # This is the `down` migration of the statement:
      #
      #     remove :jetting
      #

      # add :jetting, :map
      # This is the `down` migration of the statement:
      #
      #     remove :slide
      #

      # add :slide, :text
      # This is the `down` migration of the statement:
      #
      #     remove :needle
      #

      # add :needle, :text
    end

    alter table(:carburetors) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :sizes, {:array, :map}
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:clutches) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:comments) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:cranks) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:cylinders) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:engines) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:exhausts) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    drop constraint(:follows, "follows_user_id_fkey")

    drop table(:follows)

    alter table(:ignitions) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:likes) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:manufacturers) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:models) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:pulleys) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:tokens) do
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
      modify :created_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:users) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:variators) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end
  end
end
