defmodule Garage.Repo.Migrations.ChangeCarbToTuning do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:carb_tunings, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :tuning, :map
      add :needle_position, :bigint

      add :carburetor_id,
          references(:carburetors,
            column: :id,
            name: "carb_tunings_carburetor_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :build_id,
          references(:builds,
            column: :id,
            name: "carb_tunings_build_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    alter table(:builds) do
      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      remove :carburetor_id

      add :carb_tuning_id,
          references(:carb_tunings,
            column: :id,
            name: "builds_carb_tuning_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:builds, "builds_carb_tuning_id_fkey")

    alter table(:builds) do
      remove :carb_tuning_id
      # This is the `down` migration of the statement:
      #
      #     remove :carburetor_id
      #

      add :carburetor_id,
          references(:carburetors,
            column: :id,
            name: "builds_carburetor_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    drop constraint(:carb_tunings, "carb_tunings_carburetor_id_fkey")

    drop constraint(:carb_tunings, "carb_tunings_build_id_fkey")

    drop table(:carb_tunings)
  end
end
