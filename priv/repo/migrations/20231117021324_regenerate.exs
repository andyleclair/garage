defmodule Garage.Repo.Migrations.Regenerate do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:wheels, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :manufacturer_id, :uuid, null: false
    end

    create table(:variators, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :size, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :manufacturer_id, :uuid, null: false
    end

    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :email, :citext, null: false
      add :username, :text, null: false
      add :hashed_password, :text, null: false
      add :avatar_url, :text
      add :color, :text, null: false
      add :color_nonce, :text, null: false
      add :profile, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create unique_index(:users, [:email], name: "users_unique_email_index")

    create unique_index(:users, [:username], name: "users_username_index")

    create table(:tokens, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :extra_data, :map
      add :purpose, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :subject, :text, null: false
      add :jti, :text, null: false, primary_key: true
    end

    create table(:pulleys, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :size, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :manufacturer_id, :uuid, null: false
    end

    create table(:models, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :slug, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :manufacturer_id, :uuid
    end

    create table(:manufacturers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:wheels) do
      modify :manufacturer_id,
             references(:manufacturers,
               column: :id,
               name: "wheels_manufacturer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:variators) do
      modify :manufacturer_id,
             references(:manufacturers,
               column: :id,
               name: "variators_manufacturer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:pulleys) do
      modify :manufacturer_id,
             references(:manufacturers,
               column: :id,
               name: "pulleys_manufacturer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:models) do
      modify :manufacturer_id,
             references(:manufacturers,
               column: :id,
               name: "models_manufacturer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:models, [:manufacturer_id, :slug], name: "models_slug_index")

    alter table(:manufacturers) do
      add :name, :text, null: false
      add :category, :text
      add :description, :text, default: ""
      add :slug, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create unique_index(:manufacturers, [:slug], name: "manufacturers_slug_index")

    create table(:likes, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :user_id,
          references(:users,
            column: :id,
            name: "likes_user_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :build_id, :uuid, null: false
    end

    create table(:ignitions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "ignitions_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:forks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "forks_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:exhausts, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "exhausts_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:engines, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "engines_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:cylinders, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :displacement, :bigint, default: 50
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :engine_id,
          references(:engines,
            column: :id,
            name: "cylinders_engine_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "cylinders_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:cranks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :stroke, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :engine_id,
          references(:engines,
            column: :id,
            name: "cranks_engine_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "cranks_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:comments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :text, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :user_id,
          references(:users,
            column: :id,
            name: "comments_user_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :build_id, :uuid, null: false
    end

    create table(:clutches, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "clutches_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:carburetors, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, default: ""
      add :jets, {:array, :text}, default: []
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "carburetors_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:builds, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:likes) do
      modify :build_id,
             references(:builds,
               column: :id,
               name: "likes_build_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    create unique_index(:likes, [:user_id, :build_id], name: "likes_unique_user_and_build_index")

    alter table(:comments) do
      modify :build_id,
             references(:builds,
               column: :id,
               name: "comments_build_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    alter table(:builds) do
      add :name, :text, null: false
      add :description, :text
      add :year, :bigint, null: false
      add :image_urls, {:array, :text}, null: false, default: []
      add :slug, :text, null: false
      add :subframe, :text
      add :cdi_box, :text
      add :jetting, :map
      add :slide, :text
      add :needle, :text
      add :variated?, :boolean, null: false, default: false
      add :front_sprocket, :bigint
      add :rear_sprocket, :bigint
      add :gear_ratio, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :ignition_id,
          references(:ignitions,
            column: :id,
            name: "builds_ignition_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :carburetor_id,
          references(:carburetors,
            column: :id,
            name: "builds_carburetor_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :wheels_id,
          references(:wheels,
            column: :id,
            name: "builds_wheels_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :forks_id,
          references(:forks,
            column: :id,
            name: "builds_forks_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :cylinder_id,
          references(:cylinders,
            column: :id,
            name: "builds_cylinder_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :exhaust_id,
          references(:exhausts,
            column: :id,
            name: "builds_exhaust_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :clutch_id,
          references(:clutches,
            column: :id,
            name: "builds_clutch_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :crank_id,
          references(:cranks,
            column: :id,
            name: "builds_crank_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :variator_id,
          references(:variators,
            column: :id,
            name: "builds_variator_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :pulley_id,
          references(:pulleys,
            column: :id,
            name: "builds_pulley_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :engine_id,
          references(:engines,
            column: :id,
            name: "builds_engine_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :builder_id,
          references(:users,
            column: :id,
            name: "builds_builder_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "builds_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :model_id,
          references(:models,
            column: :id,
            name: "builds_model_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(:builds, [:slug], name: "builds_slug_index")
  end

  def down do
    drop_if_exists unique_index(:builds, [:slug], name: "builds_slug_index")

    drop constraint(:builds, "builds_ignition_id_fkey")

    drop constraint(:builds, "builds_carburetor_id_fkey")

    drop constraint(:builds, "builds_wheels_id_fkey")

    drop constraint(:builds, "builds_forks_id_fkey")

    drop constraint(:builds, "builds_cylinder_id_fkey")

    drop constraint(:builds, "builds_exhaust_id_fkey")

    drop constraint(:builds, "builds_clutch_id_fkey")

    drop constraint(:builds, "builds_crank_id_fkey")

    drop constraint(:builds, "builds_variator_id_fkey")

    drop constraint(:builds, "builds_pulley_id_fkey")

    drop constraint(:builds, "builds_engine_id_fkey")

    drop constraint(:builds, "builds_builder_id_fkey")

    drop constraint(:builds, "builds_manufacturer_id_fkey")

    drop constraint(:builds, "builds_model_id_fkey")

    alter table(:builds) do
      remove :model_id
      remove :manufacturer_id
      remove :builder_id
      remove :engine_id
      remove :pulley_id
      remove :variator_id
      remove :crank_id
      remove :clutch_id
      remove :exhaust_id
      remove :cylinder_id
      remove :forks_id
      remove :wheels_id
      remove :carburetor_id
      remove :ignition_id
      remove :updated_at
      remove :inserted_at
      remove :gear_ratio
      remove :rear_sprocket
      remove :front_sprocket
      remove :variated?
      remove :needle
      remove :slide
      remove :jetting
      remove :cdi_box
      remove :subframe
      remove :slug
      remove :image_urls
      remove :year
      remove :description
      remove :name
    end

    drop constraint(:comments, "comments_build_id_fkey")

    alter table(:comments) do
      modify :build_id, :uuid
    end

    drop_if_exists unique_index(:likes, [:user_id, :build_id],
                     name: "likes_unique_user_and_build_index"
                   )

    drop constraint(:likes, "likes_build_id_fkey")

    alter table(:likes) do
      modify :build_id, :uuid
    end

    drop table(:builds)

    drop constraint(:carburetors, "carburetors_manufacturer_id_fkey")

    drop table(:carburetors)

    drop constraint(:clutches, "clutches_manufacturer_id_fkey")

    drop table(:clutches)

    drop constraint(:comments, "comments_user_id_fkey")

    drop table(:comments)

    drop constraint(:cranks, "cranks_engine_id_fkey")

    drop constraint(:cranks, "cranks_manufacturer_id_fkey")

    drop table(:cranks)

    drop constraint(:cylinders, "cylinders_engine_id_fkey")

    drop constraint(:cylinders, "cylinders_manufacturer_id_fkey")

    drop table(:cylinders)

    drop constraint(:engines, "engines_manufacturer_id_fkey")

    drop table(:engines)

    drop constraint(:exhausts, "exhausts_manufacturer_id_fkey")

    drop table(:exhausts)

    drop constraint(:forks, "forks_manufacturer_id_fkey")

    drop table(:forks)

    drop constraint(:ignitions, "ignitions_manufacturer_id_fkey")

    drop table(:ignitions)

    drop constraint(:likes, "likes_user_id_fkey")

    drop table(:likes)

    drop_if_exists unique_index(:manufacturers, [:slug], name: "manufacturers_slug_index")

    alter table(:manufacturers) do
      remove :updated_at
      remove :inserted_at
      remove :slug
      remove :description
      remove :category
      remove :name
    end

    drop_if_exists unique_index(:models, [:manufacturer_id, :slug], name: "models_slug_index")

    drop constraint(:models, "models_manufacturer_id_fkey")

    alter table(:models) do
      modify :manufacturer_id, :uuid
    end

    drop constraint(:pulleys, "pulleys_manufacturer_id_fkey")

    alter table(:pulleys) do
      modify :manufacturer_id, :uuid
    end

    drop constraint(:variators, "variators_manufacturer_id_fkey")

    alter table(:variators) do
      modify :manufacturer_id, :uuid
    end

    drop constraint(:wheels, "wheels_manufacturer_id_fkey")

    alter table(:wheels) do
      modify :manufacturer_id, :uuid
    end

    drop table(:manufacturers)

    drop table(:models)

    drop table(:pulleys)

    drop table(:tokens)

    drop_if_exists unique_index(:users, [:username], name: "users_username_index")

    drop_if_exists unique_index(:users, [:email], name: "users_unique_email_index")

    drop table(:users)

    drop table(:variators)

    drop table(:wheels)
  end
end